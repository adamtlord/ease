# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-10 20:45
from __future__ import unicode_literals

import accounts.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import localflavor.us.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', accounts.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile_phone', localflavor.us.models.PhoneNumberField(blank=True, null=True)),
                ('known_as', models.CharField(blank=True, max_length=50, null=True)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date of birth')),
                ('spent_to_date', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('residence_type', models.CharField(choices=[('AP', 'Apartment'), ('AL', 'Assisted Living Facility'), ('RT', 'Retirement Community'), ('SF', 'Single Family Home'), ('SN', 'Skilled Nursing Facility')], default='SF', max_length=2)),
                ('residence_instructions', models.TextField(blank=True, null=True)),
                ('special_assistance', models.CharField(blank=True, max_length=1024, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('home_phone', localflavor.us.models.PhoneNumberField(blank=True, null=True)),
                ('preferred_phone', models.CharField(choices=[('h', 'Home'), ('m', 'Mobile')], default='h', max_length=2)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LovedOne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('street1', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address 1')),
                ('street2', models.CharField(blank=True, max_length=100, null=True, verbose_name='Address 2')),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', localflavor.us.models.USStateField(blank=True, null=True)),
                ('zip_code', localflavor.us.models.USZipCodeField(blank=True, null=True, verbose_name='ZIP')),
                ('country', models.CharField(blank=True, default='U.S.A.', max_length=100, null=True)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('text_updates', models.PositiveSmallIntegerField(choices=[(1, 'Yes, every time'), (2, 'Yes, on some trips'), (3, 'Not sure'), (0, 'No')], default=0)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('mobile_phone', localflavor.us.models.PhoneNumberField(blank=True, null=True)),
                ('relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('text_updates', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Customer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_complete', models.BooleanField(default=False)),
                ('on_behalf', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
